{"version":3,"sources":["Upload.js","reportWebVitals.js","index.js"],"names":["Upload","props","state","confirmation","isLoading","files","Invoices","Amount","InvoiceDate","Vendor","Description","handleChane","bind","event","preventDefault","target","value","name","this","setState","a","UID","Math","round","random","date","fileExt","imageID","folder","img","base64","fetch","method","headers","Accept","body","JSON","stringify","targetImage","response","json","OCRBody","console","log","Invoice","processing","className","Form","onSubmit","handleSubmit","FormGroup","FormText","color","multiple","onDone","getFiles","Label","Input","type","id","required","onChange","Button","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"gUAQMA,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAELC,MAAQ,CACTC,aAAe,GACfC,UAAY,GACZC,MAAQ,GACRC,SAAW,GACXC,OAAS,GACTC,YAAc,GACdC,OAAS,GACTC,YAAc,IAGlB,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBAdA,E,+CAkBnB,SAAYC,GACRA,EAAMC,iBACN,IAAMC,EAASF,EAAME,OACfC,EAAQD,EAAOC,MACRD,EAAOE,KAEpBC,KAAKC,SAAS,CAACF,KAAKD,M,iEAGxB,WAAmBH,GAAnB,SAAAO,EAAA,sDACIP,EAAMC,iBACNI,KAAKC,SAAS,CAAChB,aAAc,iBAFjC,gD,oHAKA,WAAeE,GAAf,uBAAAe,EAAA,6DACIF,KAAKC,SAAS,CACVf,UAAW,kBACXC,MAAOA,IAGTgB,EAAMC,KAAKC,MAAM,EAAG,OAAAD,KAAKE,UAE3BC,EAAK,CACLC,QAAQ,MACRC,QAASN,EACTO,OAAOP,EACPQ,IAAMX,KAAKhB,MAAMG,MAAM,GAAGyB,QAG9BZ,KAAKC,SAAS,CAAChB,aAAc,kBAf7B,SAgBM4B,MAAM,oEACZ,CACIC,OAAQ,OACRC,QAAS,CACLC,OAAS,mBACT,eAAgB,oBAEpBC,KAAOC,KAAKC,UAAUZ,KAvB1B,cA4BIa,EAAcjB,EAAM,OA5BxB,SA8BuBU,MACnB,wEACA,CACAC,OAAQ,OACRC,QAAS,CACLC,OAAS,mBACT,eAAgB,oBAEpBC,KAAOC,KAAKC,UAAUC,KAtC1B,cA8BMC,EA9BN,OAyCArB,KAAKC,SAAS,CAAChB,aAAc,KAzC7B,UA2CsBoC,EAASC,OA3C/B,QA2CMC,EA3CN,OA4CAC,QAAQC,IAAI,UAAUF,GAEtBvB,KAAKC,SAAS,CAACZ,OAAQkC,EAAQN,KAAK,KACpCjB,KAAKC,SAAS,CAACyB,QAASH,EAAQN,KAAK,KACrCjB,KAAKC,SAAS,CAACX,YAAaiC,EAAQN,KAAK,KAhDzC,iD,2EAqDA,WACI,IAAMU,EAAY3B,KAAKhB,MAAMC,aAC7B,OACI,qBAAK2C,UAAU,MAAf,SACI,qBAAKA,UAAU,iBAAf,SACI,eAACC,EAAA,EAAD,CAAMC,SAAU9B,KAAK+B,aAArB,UACI,eAACC,EAAA,EAAD,WACI,oBAAIJ,UAAU,cAAd,SAA8BD,IAC9B,gDACA,cAACM,EAAA,EAAD,CAAUC,MAAM,QAAhB,qBAGJ,qBAAKN,UAAU,yBAAf,SACI,cAAC,IAAD,CAAYO,UAAU,EACtBC,OAAQpC,KAAKqC,SAAS3C,KAAKM,aAI/B,eAACgC,EAAA,EAAD,WACI,cAACM,EAAA,EAAD,UACI,2CAEJ,cAACC,EAAA,EAAD,CACIC,KAAK,OACLzC,KAAK,UACL0C,GAAG,UACHC,UAAQ,EACR5C,MAAOE,KAAKhB,MAAM0C,QAClBiB,SAAY3C,KAAKP,iBAIzB,eAACuC,EAAA,EAAD,WACI,cAACM,EAAA,EAAD,UACI,8CAEJ,cAACC,EAAA,EAAD,CACIC,KAAK,OACLzC,KAAK,SACL0C,GAAG,SACHC,UAAQ,EACR5C,MAAOE,KAAKhB,MAAMK,OAClBsD,SAAY3C,KAAKP,iBAIzB,eAACuC,EAAA,EAAD,WACI,cAACM,EAAA,EAAD,UACI,wCAEJ,cAACC,EAAA,EAAD,CACIC,KAAK,OACLzC,KAAK,cACL0C,GAAG,cACHC,UAAQ,EACR5C,MAAOE,KAAKhB,MAAMM,YAClBqD,SAAY3C,KAAKP,iBAIzB,eAACuC,EAAA,EAAD,WACI,cAACM,EAAA,EAAD,UACI,0CAEJ,cAACC,EAAA,EAAD,CACIC,KAAK,OACLzC,KAAK,SACL0C,GAAG,SACHC,UAAQ,EACR5C,MAAOE,KAAKhB,MAAMO,OAClBoD,SAAY3C,KAAKP,iBAIzB,eAACuC,EAAA,EAAD,WACI,cAACM,EAAA,EAAD,UACI,+CAEJ,cAACC,EAAA,EAAD,CACIC,KAAK,OACLzC,KAAK,cACL0C,GAAG,cACHC,UAAQ,EACR5C,MAAOE,KAAKhB,MAAMQ,YAClBmD,SAAY3C,KAAKP,iBAGzB,cAACmD,EAAA,EAAD,CAAQhB,UAAU,mCAAlB,+B,GA7KHiB,aAuLN/D,ICnLAgE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OAAO,cAAC,EAAD,IAAWC,SAASC,eAAe,SAKnDZ,M","file":"static/js/main.e46aecd7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport FileBase64 from 'react-file-base64';\nimport {Button,Form,FormGroup,Label,FormText,Input} from \"reactstrap\"\n\nimport './upload.css';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faInfoCircle } from '@fortawesome/free-solid-svg-icons'; \n\nclass Upload extends Component {\n    constructor(props) {\n        super(props);\n    \n    this.state = {\n        confirmation : \"\",\n        isLoading : \"\",\n        files : \"\",\n        Invoices : \"\",\n        Amount : \"\",\n        InvoiceDate : \"\",\n        Vendor : \"\",\n        Description : \"\"\n      }\n\n    this.handleChane = this.handleChane.bind(this);\n\n    }  \n\n    handleChane(event) {\n        event.preventDefault();\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        this.setState({name:value});\n    }\n\n    async handleSubmit(event){\n        event.preventDefault();\n        this.setState({confirmation: \"Uploading...\"});\n    }\n\n    async getFiles(files){\n        this.setState({\n            isLoading: \"Extracting data\",\n            files: files\n        });\n\n    const UID = Math.round(1+ Math.random() * (1000000-1));\n    \n    var date={\n        fileExt:\"png\",\n        imageID: UID,\n        folder:UID,\n        img : this.state.files[0].base64\n    };\n\n    this.setState({confirmation: \"Processing...\"})\n    await fetch('https://8jf7ct3ey4.execute-api.us-east-2.amazonaws.com/Production',\n    {\n        method: \"POST\",\n        headers: {\n            Accept : \"application/json\",\n            \"Content-Type\": \"application.json\"\n        },\n        body : JSON.stringify(date)\n    }\n    );\n\n\n    let targetImage = UID + \".png\";\n\n    const response = await fetch(\n        'https://8jf7ct3ey4.execute-api.us-east-2.amazonaws.com/Production/ocr',\n        {\n        method: \"POST\",\n        headers: {\n            Accept : \"application/json\",\n            \"Content-Type\": \"application.json\"\n        },\n        body : JSON.stringify(targetImage)\n        }\n    );\n    this.setState({confirmation: \"\"})\n\n    const OCRBody = await response.json();\n    console.log(\"OCRBody\",OCRBody);\n\n    this.setState({Amount: OCRBody.body[0]})\n    this.setState({Invoice: OCRBody.body[1]})\n    this.setState({InvoiceDate: OCRBody.body[2]})\n\n}\n\n    \n    render() {\n        const processing= this.state.confirmation; \n        return (\n            <div className=\"row\">\n                <div className=\"col-6 offset-3\">\n                    <Form onSubmit={this.handleSubmit}>\n                        <FormGroup>\n                            <h3 className=\"text-danger\">{ processing }</h3>\n                            <h6>Upload Invoice</h6>\n                            <FormText color=\"muted\">PNG,JPG</FormText>\n                        \n\n                        <div className=\"form-group files color\">\n                            <FileBase64 multiple={true}\n                            onDone={this.getFiles.bind(this)}></FileBase64>\n                        </div>\n                        </FormGroup>\n\n                        <FormGroup>\n                            <Label>\n                                <h6>Invoice</h6>\n                            </Label>\n                            <Input\n                                type=\"text\"\n                                name=\"Invoice\"\n                                id=\"Invoice\"\n                                required\n                                value={this.state.Invoice}\n                                onChange = {this.handleChane}\n                                /> \n                        </FormGroup>\n\n                        <FormGroup>\n                            <Label>\n                                <h6>Amount ($)</h6>\n                            </Label>\n                            <Input\n                                type=\"text\"\n                                name=\"Amount\"\n                                id=\"Amount\"\n                                required\n                                value={this.state.Amount}\n                                onChange = {this.handleChane}\n                                />\n                        </FormGroup>\n\n                        <FormGroup>\n                            <Label>\n                                <h6>Date</h6>\n                            </Label>\n                            <Input\n                                type=\"text\"\n                                name=\"InvoiceDate\"\n                                id=\"InvoiceDate\"\n                                required\n                                value={this.state.InvoiceDate}\n                                onChange = {this.handleChane}\n                                />\n                        </FormGroup>\n\n                        <FormGroup>\n                            <Label>\n                                <h6>Vendor</h6>\n                            </Label>\n                            <Input\n                                type=\"text\"\n                                name=\"Vendor\"\n                                id=\"Vendor\"\n                                required\n                                value={this.state.Vendor}\n                                onChange = {this.handleChane}\n                                />\n                        </FormGroup>\n\n                        <FormGroup>\n                            <Label>\n                                <h6>Description</h6>\n                            </Label>\n                            <Input\n                                type=\"text\"\n                                name=\"Description\"\n                                id=\"Description\"\n                                required\n                                value={this.state.Description}\n                                onChange = {this.handleChane}\n                                />\n                        </FormGroup>\n                        <Button className=\"btn btn-lg btn-block btn-success\">\n                            Submit\n                        </Button>\n                    </Form>\n                </div>\n            </div>\n        );\n    }\n}\n \nexport default Upload;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Upload from './Upload'\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(<Upload />,document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}